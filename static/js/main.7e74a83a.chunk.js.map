{"version":3,"sources":["components/TodoBody.js","components/TodoList.js","components/Todo.js","App.js","index.js"],"names":["TodoBody","state","changeState","addTodoList","toggleBtn","className","type","placeholder","value","onChange","Button","variant","color","onClick","TodoList","deleteTodo","addItem","editTodoList","deleteAllTodo","map","val","name","id","style","marginRight","Todo","useState","setState","localStorage","getItem","JSON","parse","setAddItem","setToggleBtn","editedItem","setEditedItem","useEffect","setItem","stringify","e","target","alert","allItem","Date","getTime","toString","findTodo","find","deletes","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e74a83a.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React from 'react';\r\n\r\nconst TodoBody = ({state,changeState,addTodoList,toggleBtn}) => {\r\n    return (\r\n        <>\r\n            <div className=\"w-1/3 items-center bg-white mx-auto rounded p-10\">\r\n                <div className=\"flex \">\r\n                    <input className=\"focus:outline-none border border-gray-400 focus:ring-1 focus:ring-indigo-600 w-full p-1 rounded text-base\" type=\"text\" placeholder=\"Enter you Title\" value={state} onChange={changeState} />\r\n                    <Button  className=\"addbtn\" variant=\"contained\" color=\"secondary\">\r\n                        {toggleBtn ? <AddIcon onClick={addTodoList} /> : <EditIcon onClick={addTodoList} />}\r\n                    </Button>\r\n                </div>\r\n                <p></p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoBody","import Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React from 'react';\r\n\r\nconst TodoList = ({deleteTodo,addItem,editTodoList,deleteAllTodo}) => {\r\n    return (\r\n        <>\r\n            <div className=\"mt-8 w-1/3 mx-auto\">\r\n                {addItem.map((val) => {\r\n                    return (\r\n                        <>\r\n                            <div className=\"flex text-white mb-3\" key={val.id}>\r\n                                <h1 className=\"w-full bg-blue-500 p-2 mr-1 hover:bg-blue-600 rounded\">{val.name}</h1>\r\n                                <div className=\"flex\">\r\n                                    <Button onClick={() => editTodoList(val.id)} className=\"editordelete\" style={{ marginRight: '3px' }} variant=\"contained\" color=\"primary\">\r\n                                        <EditIcon />\r\n                                    </Button>\r\n                                    <Button className=\"editordelete\" onClick={() => deleteTodo(val.id)} variant=\"contained\" color=\"secondary\">\r\n                                        <DeleteIcon />\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                })}\r\n                <Button onClick={deleteAllTodo} className=\"delete\">Delete All</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React, { useEffect, useState } from 'react';\r\nimport TodoBody from './TodoBody';\r\nimport TodoList from './TodoList';\r\n\r\nconst todoLocalStorage = () => {\r\n    const todo = localStorage.getItem('Todos')\r\n    if(todo){\r\n        return JSON.parse(localStorage.getItem('Todos'))\r\n    }else{\r\n        return []\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n    const [state, setState] = useState(\"\")\r\n    const [addItem, setAddItem] = useState(todoLocalStorage());\r\n    const [toggleBtn,setToggleBtn] = useState(true)\r\n    const [editedItem,setEditedItem] = useState(null)\r\n    const todoChangeData = (e) => {\r\n        setState(e.target.value);\r\n    }\r\n    const addTodoList = () => {\r\n        if(state < 5){\r\n            alert('Plz fill in the Todo Box al least less than 5 charaecter')\r\n        }else if(state && !toggleBtn){\r\n            setAddItem(\r\n                addItem.map((val) => {\r\n                    if(val.id === editedItem){\r\n                        return {...val,name:state}\r\n                    }\r\n                    return val\r\n                })\r\n            )\r\n            setState('')\r\n            setToggleBtn(true)\r\n        }else{\r\n            const allItem = {id: new Date().getTime().toString(), name: state}\r\n            setAddItem([...addItem, allItem])\r\n            setState(\" \")\r\n        }\r\n    }\r\n    const deleteTodo = (id) => {\r\n        const deletes = addItem.filter((val) => {\r\n            return id !== val.id\r\n        })\r\n        setAddItem(deletes)\r\n    }\r\n    const editTodoList = (id) => {\r\n        const findTodo = addItem.find((val) => val.id === id)\r\n        setState(findTodo.name)\r\n        setToggleBtn(false)\r\n        setEditedItem(id)\r\n    }\r\n    const deleteAllTodo = () => {\r\n        setAddItem([])\r\n    }\r\n    useEffect(() => {\r\n        localStorage.setItem('Todos',JSON.stringify(addItem))\r\n    },[addItem])\r\n    return (\r\n        <>\r\n            <h1 className=\"text-white text-center text-2xl font-bold py-12\">\r\n                Simple React ToDo App\r\n            </h1>\r\n            <TodoBody toggleBtn={toggleBtn} state={state} changeState={todoChangeData} addTodoList={addTodoList} />\r\n            <TodoList deleteAllTodo={deleteAllTodo} editTodoList={editTodoList}  deleteTodo={deleteTodo} addItem={addItem} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react'\nimport Todo from './components/Todo'\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}